# Copyright 2021 HCL Technologies
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: "3.8"

services:
  core:
    image: ${DX_DOCKER_IMAGE_CORE:?'Missing docker image environment parameter'}
    volumes:
      - ./volumes/core/wp_profile:/opt/HCL/wp_profile
    ports:
      - "7777:7777"
      - "10020:10020"
      - "10039:10039"
      - "10041:10041"
      - "10200:10200"
      - "10202:10202"
      - "10033:10033"
      - "10203:10203"
    networks:
      - default
  ringapi:
    depends_on:
      - core
    image: ${DX_DOCKER_IMAGE_RINGAPI:?'Missing docker image environment parameter'}
    environment: 
      - DEBUG=ringapi-server:*
      - PORTAL_PORT=10039 
      - PORTAL_HOST=core
      - CORS_ORIGIN=http://${DX_HOSTNAME:?'Please set hostname'}:3000,http://${DX_HOSTNAME:?'Please set hostname'}:5000,http://${DX_HOSTNAME:?'Please set hostname'}:10039,http://${DX_HOSTNAME:?'Please set hostname'}:5500,http://${DX_HOSTNAME:?'Please set hostname'}:5501
    ports:
      - "4000:3000"
    networks:
      - default
  dam:
    depends_on:
      dam-db-pool:
        condition: service_healthy 
    image: ${DX_DOCKER_IMAGE_DAM:?'Missing docker image environment parameter'}
    environment:
      - DEBUG=@medialibrary/server:*
      - POSTGRES_DB_URI=postgres://medialibrary:1234@dam-db/test
      - EXTERNAL_RING_API_HOST=${DX_HOSTNAME:?'Please set hostname'}
      - EXTERNAL_RING_API_PORT=4000
      - RING_API_HOST=ringapi
      - RING_API_PORT=3000
      - CORS_ORIGIN=http://${DX_HOSTNAME:?'Please set hostname'}:10039
      - IMAGE_PROCESSOR_API_HOST=image-processor
      - IMAGE_PROCESSOR_API_PORT=8080
      - EXTERNAL_IMAGE_PROCESSOR_API_HOST=${DX_HOSTNAME:?'Please set hostname'}
      - EXTERNAL_IMAGE_PROCESSOR_API_PORT=3500
      - EXTERNAL_BASE_API_HOST=${DX_HOSTNAME:?'Please set hostname'}
      - EXTERNAL_BASE_API_PORT=3000
    ports:
      - "3000:3001"
    volumes:
      - ./volumes/dam/upload:/opt/app/upload
    networks:
      - default
  image-processor:
    image: ${DX_DOCKER_IMAGE_IMAGE_PROCESSOR:?'Missing docker image environment parameter'}
    environment: 
      - DEBUG=*
      - HOST=0.0.0.0 
      - CORS_ORIGIN=http://${DX_HOSTNAME:?'Please set hostname'}:3000,http://${DX_HOSTNAME:?'Please set hostname'}:10039
    ports:
      - "3500:8080"
    networks:
      - default
  cc:
    depends_on:
      - dam-db
    image: ${DX_DOCKER_IMAGE_CC:?'Missing docker image environment parameter'}
    ports:
      - "5000:3000"
    environment: 
      - DEBUG=@content-ui/server:*
      - PORTAL_PORT=10039 
      - PORTAL_HOST=core
      - EXTERNAL_RING_API_HOST=${DX_HOSTNAME:?'Please set hostname'}
      - EXTERNAL_RING_API_PORT=4000
      - RING_API_HOST=ringapi
      - RING_API_PORT=3000
      - CORS_ORIGIN=http://${DX_HOSTNAME:?'Please set hostname'}:10039
    networks:
      - default
  ds:
    depends_on:
      - ringapi
    image: ${DX_DOCKER_IMAGE_DS:?'Missing docker image environment parameter'}
    ports:
      - "5500:3000"
    environment: 
      - DEBUG=@site-manager/server:*
      - PORTAL_PORT=10039 
      - PORTAL_HOST=core
      - EXTERNAL_RING_API_HOST=${DX_HOSTNAME:?'Please set hostname'}
      - EXTERNAL_RING_API_PORT=4000
      - RING_API_HOST=ringapi
      - RING_API_PORT=3000
      - CORS_ORIGIN=http://${DX_HOSTNAME:?'Please set hostname'}:10039
    networks:
      - default
  dam-db-node-0:
    container_name: dam-db-node-0
    hostname: dam-db-node-0
    image: ${DX_DOCKER_IMAGE_DAM_DB_NODE:?'Missing docker image environment parameter'}   
    environment:
      POSTGRES_DB: dxmediadb
      POSTGRES_USER: dxuser
      POSTGRES_PASSWORD: d1gitalExperience
      POSTGRES_REPLICATION_USER: repdxuser
      POSTGRES_REPLICATION_PASSWORD: d1gitalRepExperience
      DAM_USER: damuser
      POSTGRES_WAL_SENDERS: 5
      POSTGRES_WAL_KEEP_SEGMENTS: 64
      REPMGR_PORT_NUMBER: 5432
      REPMGR_PARTNER_NODES: dam-db-node-0; dam-db-node-1; dam-db-node-2
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
    - "5433:5432"
  dam-db-node-1:
    container_name: dam-db-node-1
    hostname: dam-db-node-1
    image: ${DX_DOCKER_IMAGE_DAM_DB_NODE:?'Missing docker image environment parameter'}   
    environment:
      POSTGRES_DB: dxmediadb
      POSTGRES_USER: dxuser
      POSTGRES_PASSWORD: d1gitalExperience
      POSTGRES_REPLICATION_USER: repdxuser
      POSTGRES_REPLICATION_PASSWORD: d1gitalRepExperience
      DAM_USER: damuser
      POSTGRES_WAL_SENDERS: 5
      POSTGRES_WAL_KEEP_SEGMENTS: 64
      REPMGR_PORT_NUMBER: 5432
      REPMGR_PARTNER_NODES: dam-db-node-0; dam-db-node-1; dam-db-node-2
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
    - "5434:5432" 
    depends_on:
      dam-db-node-0:
        condition: service_healthy 
  dam-db-node-2:
    container_name: dam-db-node-2
    hostname: dam-db-node-2
    image: ${DX_DOCKER_IMAGE_DAM_DB_NODE:?'Missing docker image environment parameter'}   
    environment:
      POSTGRES_DB: dxmediadb
      POSTGRES_USER: dxuser
      POSTGRES_PASSWORD: d1gitalExperience
      POSTGRES_REPLICATION_USER: repdxuser
      POSTGRES_REPLICATION_PASSWORD: d1gitalRepExperience
      DAM_USER: damuser
      POSTGRES_WAL_SENDERS: 5
      POSTGRES_WAL_KEEP_SEGMENTS: 64
      REPMGR_PORT_NUMBER: 5432
      REPMGR_PARTNER_NODES: dam-db-node-0; dam-db-node-1; dam-db-node-2
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
    - "5435:5432"
    depends_on:
        dam-db-node-1:
          condition: service_healthy  
  dam-db-pool:
    image: ${DX_DOCKER_IMAGE_DAM_DB_CONNECTION_POOL:?'Missing docker image environment parameter'}   
    ports:
      - 5432:5432
    environment:
      - PGPOOL_BACKEND_NODES=0:dam-db-node-0:5432,1:dam-db-node-1:5433,2:dam-db-node-2:5434
      - PGPOOL_SR_CHECK_USER=repdxuser
      - PGPOOL_SR_CHECK_PASSWORD=d1gitalRepExperience
      - PGPOOL_POSTGRES_USERNAME=dxuser
      - PGPOOL_POSTGRES_PASSWORD=d1gitalExperience
      - PGPOOL_ADMIN_USERNAME=admin
      - PGPOOL_ADMIN_PASSWORD=adminpassword
      - PGPOOL_ENABLE_LOAD_BALANCING=yes
      - PGPOOL_POSTGRES_CUSTOM_USERS=damuser
      - PGPOOL_POSTGRES_CUSTOM_PASSWORDS=1234
    healthcheck:
      test: ["CMD", "healthcheck.sh"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - default
    depends_on:
        dam-db-node-0:
          condition: service_healthy  
